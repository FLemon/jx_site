class PEuler
  def multiples_of_3_and_5(below_x=1000)
    #If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    #Find the sum of all the multiples of 3 or 5 below 1000.
    (1...below_x).inject(0){ |sum, n| sum += n if n % 3 == 0 || n % 5 == 0; sum }
  end

  def even_fibonacci_numbers(max_term_value=4000000)
    # Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    #
    # 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    #
    # By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    # return 1 if max_term == 1 || max_term == 2
    # even_fibonacci_numbers(max_term-2) + even_fibonacci_numbers(max_term-1)
    t1 = 1
    t2 = 1
    value = t1 + t2
    sum = 0
    while value <= max_term_value
      sum += value if value.even?
      t1 = t2
      t2 = value
      value = t1 + t2
    end
    sum
  end
end
